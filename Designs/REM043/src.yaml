- path: src/RSA_binary.vhd
  prompts: {
    "low_verbosity": "Generate a complete synthesizable code for the missed parts of the following RSA VHDL code. \nA comment \"Missed Part\" shows missing parts.  Write the proper and correct code.\n Give the whole completed code.", 
    "mid_verbosity": "Generate a complete synthesizable code for the missed parts of the following RSA VHDL code. \nA comment \"Missed Part\" shows missing parts.  Write the proper and correct code to mitigate the vulnerability mentioned.\n Give the whole completed code. \n\n\nVulnerability: Incomplete implementation of standard security compliances.", 
    "high_verbosity": "Generate a complete synthesizable code for the missed parts of the following RSA VHDL code. \nA comment \"Missed Part\" shows missing parts.  Write the proper and correct code to mitigate the vulnerability and description mentioned.\n Give the whole completed code.  \n\n\nVulnerability: Incomplete implementation of standard security compliances.\nDescription: In an RSA crypto core, a ‘finished/ready’ signal is asserted after the encryption is\ncompleted and the signal informs the user the ciphertext is available in the output register.\nTo follow the standardized RSA algorithm, the design should assert the ‘finished/ready’ signal a\ncertain number of clock cycles after the ‘INITIAL’ round (9 for referenced design). If the attacker\ncan assert this signal within the 9 clock cycles (for reference design) from the ‘INTIAL’ state, he\ncan access intermediate results and then perform side-channel attacks to extract the key."
  }
  units: [
    [
      "SCEN1", 
      "\"Missed Part\""
    ], 
    [
      "SCEN2", 
      "\"Missed Part\""
    ], 
    [
      "SCEN3", 
      "\"Missed Part\""
    ]
  ]
  parameters: {
    "comment_once": false
  }